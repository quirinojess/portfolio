{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\quiri\\\\OneDrive\\\\Documentos\\\\portfolio\\\\src\\\\components\\\\Menu\\\\Menu.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport * as S from \"./styled\";\nimport { useHandleClick } from \"hooks\";\nimport { useScroll } from \"context/ScrollContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Menu(content) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const {\n    handleClick\n  } = useHandleClick();\n  const {\n    scrollTarget\n  } = useScroll();\n  const testId = \"menu\";\n  useEffect(() => {\n    if (scrollTarget) {\n      const element = document.getElementById(scrollTarget);\n      if (element) {\n        element.scrollIntoView({\n          behavior: \"smooth\"\n        });\n      }\n    }\n  }, [scrollTarget]);\n  const navbarMap = content.content.map(item => /*#__PURE__*/_jsxDEV(S.NavItem, {\n    onClick: () => {\n      handleClick(item.path, item.scroll, false);\n      setIsOpen(false);\n    },\n    onKeyDown: () => handleClick(item.path, item.scroll, false),\n    children: item.label\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 3\n  }, this));\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(S.Hamburger, {\n      onClick: () => setIsOpen(!isOpen),\n      isOpen: isOpen,\n      children: [...Array(3)].map((_, index) => /*#__PURE__*/_jsxDEV(\"span\", {}, `hamburger-line-${index}-${Math.random()}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(S.Navbar, {\n      \"data-testid\": testId,\n      isOpen: isOpen,\n      children: navbarMap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n}\n_s(Menu, \"wGnWHERtAvgkgad4n4LL7cEB6gM=\", false, function () {\n  return [useHandleClick, useScroll];\n});\n_c = Menu;\nexport { Menu };\nvar _c;\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"names":["useEffect","useState","S","useHandleClick","useScroll","jsxDEV","_jsxDEV","Menu","content","_s","isOpen","setIsOpen","handleClick","scrollTarget","testId","element","document","getElementById","scrollIntoView","behavior","navbarMap","map","item","NavItem","onClick","path","scroll","onKeyDown","children","label","id","fileName","_jsxFileName","lineNumber","columnNumber","Container","Hamburger","Array","_","index","Math","random","Navbar","_c","$RefreshReg$"],"sources":["C:/Users/quiri/OneDrive/Documentos/portfolio/src/components/Menu/Menu.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { TMenu, TMenuItem } from \"types/Menu\";\r\nimport * as S from \"./styled\";\r\nimport { useHandleClick } from \"hooks\";\r\nimport { useScroll } from \"context/ScrollContext\";\r\n\r\nfunction Menu(content: TMenu) {\r\n const [isOpen, setIsOpen] = useState(false);\r\n const { handleClick } = useHandleClick();\r\n const { scrollTarget } = useScroll();\r\n\r\n const testId = \"menu\";\r\n\r\n useEffect(() => {\r\n  if (scrollTarget) {\r\n   const element = document.getElementById(scrollTarget);\r\n   if (element) {\r\n    element.scrollIntoView({ behavior: \"smooth\" });\r\n   }\r\n  }\r\n }, [scrollTarget]);\r\n\r\n const navbarMap = content.content.map((item: TMenuItem) => (\r\n  <S.NavItem\r\n   key={item.id}\r\n   onClick={() => {\r\n    handleClick(item.path, item.scroll, false);\r\n    setIsOpen(false);\r\n   }}\r\n   onKeyDown={() => handleClick(item.path, item.scroll, false)}>\r\n   {item.label}\r\n  </S.NavItem>\r\n ));\r\n\r\n return (\r\n  <S.Container>\r\n   <S.Hamburger onClick={() => setIsOpen(!isOpen)} isOpen={isOpen}>\r\n    {[...Array(3)].map((_, index) => (\r\n     <span key={`hamburger-line-${index}-${Math.random()}`} />\r\n    ))}\r\n   </S.Hamburger>\r\n   <S.Navbar data-testid={testId} isOpen={isOpen}>\r\n    {navbarMap}\r\n   </S.Navbar>\r\n  </S.Container>\r\n );\r\n}\r\n\r\nexport { Menu };\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,KAAKC,CAAC,MAAM,UAAU;AAC7B,SAASC,cAAc,QAAQ,OAAO;AACtC,SAASC,SAAS,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,IAAIA,CAACC,OAAc,EAAE;EAAAC,EAAA;EAC7B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM;IAAEW;EAAY,CAAC,GAAGT,cAAc,CAAC,CAAC;EACxC,MAAM;IAAEU;EAAa,CAAC,GAAGT,SAAS,CAAC,CAAC;EAEpC,MAAMU,MAAM,GAAG,MAAM;EAErBd,SAAS,CAAC,MAAM;IACf,IAAIa,YAAY,EAAE;MACjB,MAAME,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAACJ,YAAY,CAAC;MACrD,IAAIE,OAAO,EAAE;QACZA,OAAO,CAACG,cAAc,CAAC;UAAEC,QAAQ,EAAE;QAAS,CAAC,CAAC;MAC/C;IACD;EACD,CAAC,EAAE,CAACN,YAAY,CAAC,CAAC;EAElB,MAAMO,SAAS,GAAGZ,OAAO,CAACA,OAAO,CAACa,GAAG,CAAEC,IAAe,iBACrDhB,OAAA,CAACJ,CAAC,CAACqB,OAAO;IAETC,OAAO,EAAEA,CAAA,KAAM;MACdZ,WAAW,CAACU,IAAI,CAACG,IAAI,EAAEH,IAAI,CAACI,MAAM,EAAE,KAAK,CAAC;MAC1Cf,SAAS,CAAC,KAAK,CAAC;IACjB,CAAE;IACFgB,SAAS,EAAEA,CAAA,KAAMf,WAAW,CAACU,IAAI,CAACG,IAAI,EAAEH,IAAI,CAACI,MAAM,EAAE,KAAK,CAAE;IAAAE,QAAA,EAC3DN,IAAI,CAACO;EAAK,GANNP,IAAI,CAACQ,EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAOF,CACX,CAAC;EAEF,oBACC5B,OAAA,CAACJ,CAAC,CAACiC,SAAS;IAAAP,QAAA,gBACXtB,OAAA,CAACJ,CAAC,CAACkC,SAAS;MAACZ,OAAO,EAAEA,CAAA,KAAMb,SAAS,CAAC,CAACD,MAAM,CAAE;MAACA,MAAM,EAAEA,MAAO;MAAAkB,QAAA,EAC7D,CAAC,GAAGS,KAAK,CAAC,CAAC,CAAC,CAAC,CAAChB,GAAG,CAAC,CAACiB,CAAC,EAAEC,KAAK,kBAC3BjC,OAAA,aAAW,kBAAkBiC,KAAK,IAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,EAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACxD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CAAC,eACd5B,OAAA,CAACJ,CAAC,CAACwC,MAAM;MAAC,eAAa5B,MAAO;MAACJ,MAAM,EAAEA,MAAO;MAAAkB,QAAA,EAC5CR;IAAS;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEhB;AAACzB,EAAA,CAxCQF,IAAI;EAAA,QAEYJ,cAAc,EACbC,SAAS;AAAA;AAAAuC,EAAA,GAH1BpC,IAAI;AA0Cb,SAASA,IAAI;AAAG,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}